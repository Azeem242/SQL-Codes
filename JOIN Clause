Scenario: E-commerce Order Analysis
You are working as a data analyst for an e-commerce company. The company wants to analyze the total revenue generated by each customer, considering only completed orders. You have access to the following tables:

Customers (customer_id, customer_name, email)

Stores customer details.
Orders (order_id, customer_id, order_date, status)

Stores order details, where status can be 'Completed', 'Pending', or 'Cancelled'.
Order_Items (item_id, order_id, product_name, quantity, price_per_unit)

Stores details of items purchased in each order.
Question:
Write an SQL query to retrieve each customer’s name and total revenue from completed orders. The result should be sorted in descending order of revenue.

ANSWER : 
SELECT 
    c.customer_name, 
    SUM(oi.quantity * oi.price_per_unit) AS total_revenue
FROM 
    Customers AS c
JOIN 
    Orders AS o ON c.customer_id = o.customer_id
JOIN 
    Order_Items AS oi ON o.order_id = oi.order_id
WHERE 
    o.status = 'Completed' 
GROUP BY 
    c.customer_name
ORDER BY 
    total_revenue DESC; 
========================================================================================================================================================================
Question : 
Write a SQL query to find the total sales amount and the number of orders made by each salesperson in each region. Include the salesperson's name, the region, and the number of orders, as well as the total sales amount (calculated by summing the sales).

You have the following three tables:

Table 1 : salespersons
salesperson_id (INT)
salesperson_name (VARCHAR)
region_id (INT)

Table 2 : regions
region_id (INT)
region_name (VARCHAR)
country (VARCHAR)

Table 3 : orders
order_id (INT)
salesperson_id (INT)
order_date (DATE)
order_amount (DECIMAL)
customer_id (INT)
order_status (VARCHAR)

Answer : 
SELECT 
    s.salesperson_name, 
    r.region_name, 
    SUM(o.order_amount) AS Total_sales_amount, 
    COUNT(o.order_id) AS number_of_orders
FROM 
    salespersons s
JOIN 
    regions r ON s.region_id = r.region_id
JOIN 
    orders o ON s.salesperson_id = o.salesperson_id
GROUP BY 
    s.salesperson_name, r.region_name;

========================================================================================================================================================================
Question : Write a SQL query to find the names of employees, their department names, and their manager's name.

You have the following three tables:
1. employees
employee_id (INT)
employee_name (VARCHAR)
department_id (INT)
manager_id (INT) – This references the employee_id of the manager.

2. departments
department_id (INT)
department_name (VARCHAR)

3. managers
manager_id (INT)
manager_name (VARCHAR)

Requirements:
Return the employee name, their department name, and their manager's name.

ANSWER : 
SELECT 
    e.employee_name, 
    d.department_name, 
    m.manager_name
FROM 
    employees e
JOIN 
    departments d ON e.department_id = d.department_id
JOIN 
    managers m ON e.manager_id = m.manager_id; 
========================================================================================================================================================================
QUESTION: 
    Write an SQL query to find the department with the highest average salary from the following tables:

Tables:
    1. employees
employees (
    id INT,
    name VARCHAR,
    department_id INT,
    salary DECIMAL
)

    2. departments
departments (
    id INT,
    department_name VARCHAR
)

Requirement:
a. Return the department name and the average salary.
b. If multiple departments have the same highest average salary, return them all.
c. The result should be ordered by the average salary in descending order.

ANSWER CODE : 
SELECT 
    departments.department_name, 
    AVG(employees.salary) AS avg_salary
FROM 
    employees
JOIN 
    departments ON employees.department_id = departments.id
GROUP BY 
    departments.department_name
HAVING 
    AVG(employees.salary) = (
        SELECT 
            MAX(avg_salary)
        FROM (
            SELECT 
                AVG(salary) AS avg_salary
            FROM 
                employees
            GROUP BY 
                department_id
        ) AS subquery
    );

========================================================================================================================================================================
Question: Write an SQL query to find the employee with the highest salary in each department from the following tables:

Tables:
employees

sql
Copy
employees (
    id INT,
    name VARCHAR,
    department_id INT,
    salary DECIMAL
)
departments

sql
Copy
departments (
    id INT,
    department_name VARCHAR
)

Requirement:
a. Return the employee name, department name, and salary for the highest-paid employee in each department.
b. If multiple employees have the same highest salary in a department, return all of them.
c. The result should be ordered by department name in ascending order and salary in descending order.


ANSWER : 
SELECT 
    d.department_name,
    e.name AS employee_name,
    e.salary
FROM 
    employees e
JOIN 
    departments d ON e.department_id = d.id
WHERE 
    e.salary = (
        SELECT MAX(salary) 
        FROM employees 
        WHERE department_id = e.department_id
    )
ORDER BY 
    d.department_name ASC, e.salary DESC;

========================================================================================================================================================================
Question:

You have two tables:

employees

employee_id (INT)
first_name (VARCHAR)
last_name (VARCHAR)
department_id (INT)
hire_date (DATE)
departments

department_id (INT)
department_name (VARCHAR)
Write an SQL query to find the name of the department with the highest number of employees, including the department name and the number of employees in that department.

SELECT 
    d.department_name, 
    COUNT(e.employee_id) AS employee_count
FROM 
    employees e
JOIN 
    departments d 
ON 
    e.department_id = d.department_id
GROUP BY 
    d.department_name
ORDER BY 
    employee_count DESC
LIMIT 1;
